[{"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\UpdatePage.js":"1","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\PostPage.js":"2","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\Register.js":"3","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\router\\Router.js":"4","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\CardDetail.js":"5","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\Homepage.js":"6","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\index.js":"7","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\Navbar.js":"8","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\reportWebVitals.js":"9","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\BlogCard.js":"10","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\CardList.js":"11","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\ProfilePage.js":"12","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\App.js":"13","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\NavBar.js":"14","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\Login.js":"15","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\context\\AuthContext.js":"16","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\helper\\FetchData.js":"17","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\HomePage.js":"18","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\helper\\PostData.js":"19","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\MenuComponent.js":"20","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\DetailPage.js":"21","C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\Pagination.js":"22"},{"size":8553,"mtime":1612045953950,"results":"23","hashOfConfig":"24"},{"size":8677,"mtime":1611950655068,"results":"25","hashOfConfig":"24"},{"size":6325,"mtime":1611998243000,"results":"26","hashOfConfig":"24"},{"size":1706,"mtime":1612046476886,"results":"27","hashOfConfig":"24"},{"size":6970,"mtime":1612045604573,"results":"28","hashOfConfig":"24"},{"size":719,"mtime":1611795101841,"results":"29","hashOfConfig":"24"},{"size":500,"mtime":1611841022000,"results":"30","hashOfConfig":"24"},{"size":6075,"mtime":1612125225719,"results":"31","hashOfConfig":"24"},{"size":362,"mtime":1611502682000,"results":"32","hashOfConfig":"24"},{"size":4085,"mtime":1612116634220,"results":"33","hashOfConfig":"24"},{"size":831,"mtime":1612113618737,"results":"34","hashOfConfig":"24"},{"size":8555,"mtime":1612045870893,"results":"35","hashOfConfig":"24"},{"size":227,"mtime":1611840870000,"results":"36","hashOfConfig":"24"},{"size":5950,"mtime":1611842509052,"results":"37","hashOfConfig":"24"},{"size":5730,"mtime":1612092900876,"results":"38","hashOfConfig":"24"},{"size":772,"mtime":1612124084773,"results":"39","hashOfConfig":"24"},{"size":1579,"mtime":1612092762803,"results":"40","hashOfConfig":"24"},{"size":2107,"mtime":1612126549548,"results":"41","hashOfConfig":"24"},{"size":520,"mtime":1612016933679,"results":"42","hashOfConfig":"24"},{"size":5461,"mtime":1612040454682,"results":"43","hashOfConfig":"24"},{"size":1362,"mtime":1612040390780,"results":"44","hashOfConfig":"24"},{"size":957,"mtime":1612123420206,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"wg4tpi",{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\UpdatePage.js",["97","98"],"import React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { putDataWithToken } from \"../helper/FetchData\";\nimport { toast } from \"react-toastify\";\n\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\n//STYLE\n\nconst CssTextField = withStyles({\n  root: {\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflow: \"hidden\",\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"80%\",\n    paddingLeft: \"10%\",\n  },\n  form2: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  margin: {\n    margin: 2,\n    marginTop: 13,\n  },\n  address: {\n    marginTop: 13,\n    margin: 2,\n    width: \"80.5%\",\n  },\n  bio: {\n    margin: 2,\n    marginTop: 13,\n  },\n  button: {\n    marginTop: 13,\n    width: \"80.7%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    display: \"block\",\n    marginLeft: -0.1,\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n}));\n\n//FUNCTION\n\nconst UpdatePage = () => {\n  const [data, setData] = useState();\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n  const history = useHistory();\n  const { slug } = useParams();\n\n  const fetchData = async () => {\n    const res = await axios.get(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/detail`\n    );\n    formik.values.title = res?.data?.title;\n    formik.values.image = res?.data?.image;\n    formik.values.content = res?.data?.content;\n    formik.values.status = res?.data?.status;\n    setData(res?.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required(\"you must write a title\")\n      .max(100, \"Title is too long\"),\n    content: Yup.string().required(\"You must write something\"),\n    image: Yup.string(),\n    status: Yup.string(),\n  });\n\n  const initialValues = {\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    status: \"\",\n  };\n\n  const onSubmit = (values) => {\n    const response = putDataWithToken(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/update/`,\n      values\n    )\n      .then((data) => {\n        history.push(`/${slug}/detail/`);\n      })\n      .catch((err) => {\n        toast.error(err.message || \" an error occured\");\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={12} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LocalMallIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Update Post\n          </Typography>\n          <form\n            className={matches ? classes.form : classes.form2}\n            onSubmit={formik.handleSubmit}\n          >\n            <CssTextField\n              defaultValue={data?.title}\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              onChange={formik.handleChange}\n              value={formik.values.title}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"title\")}\n              error={formik.touched.title && formik.errors.title}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              id=\"image\"\n              name=\"image\"\n              label=\"Image URL\"\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              value={formik.values.image}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"image\")}\n              error={formik.touched.image && formik.errors.image}\n              helperText={formik.touched.image && formik.errors.image}\n            />\n            {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              multiline\n              rows={8}\n              id=\"content\"\n              name=\"content\"\n              label=\"Content\"\n              onChange={formik.handleChange}\n              value={formik.values.content}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"content\")}\n              error={formik.touched.content && formik.errors.content}\n              helperText={formik.touched.content && formik.errors.content}\n            />\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\n                Status\n              </InputLabel>\n              <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name=\"status\"\n                inputProps={{\n                  name: \"status\",\n                  id: \"outlined-age-native-simple\",\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"d\"} label=\"draft\" />\n                <option value={\"p\"} label=\"published\" />\n              </Select>\n            </FormControl>\n            <Button\n              color=\"primary\"\n              style={{\n                width: matches ? \"80.7%\" : \"100%\",\n                marginTop: matches ? null : 30,\n              }}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              className={classes.button}\n            >\n              Update\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\nexport default UpdatePage;\n",["99","100"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\PostPage.js",["101","102"],"\nimport React from 'react';\nimport {\n    withStyles,\n  } from \"@material-ui/core/styles\";\n  \nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CKEditor from 'ckeditor4-react';\nimport {useFormik} from 'formik'\nimport * as Yup from \"yup\";\nimport {useHistory} from 'react-router-dom';\nimport { fetchData } from '../helper/FetchData'\nimport { postData } from '../helper/PostData'\n  \n  const CssTextField = withStyles({\n    root: {\n      width: \"40%\",\n      \"& label.Mui-focused\": {\n        color: \"green\",\n      },\n      \"& .MuiInput-underline:after\": {\n        borderBottomColor: \"green\",\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"#cfccdf\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#e9967a\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"green\",\n        },\n      },\n    },\n  })(TextField);\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      \n      width:'100%',\n      overflow: 'hidden'\n    },\n   \n    paper: {\n      margin: theme.spacing(8, 4),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      marginTop: \"3rem\",\n      alignItems: \"center\",\n      width : '80%',\n      paddingLeft: \"10%\",\n    },\n    form2: {\n      marginTop: \"3rem\",\n      alignItems: \"center\",\n      width : '100%',\n    },\n    // form: {\n    //   marginTop: \"3rem\",\n    //   alignItems: \"center\",\n    //   paddingLeft: \"20%\",\n    //   paddingRight: \"5%\",\n    // },\n    // form2: {\n    //   marginTop: \"3rem\",\n    //   alignItems: \"center\",\n    // },\n    margin: {\n      margin: 2,\n      marginTop: 13,\n    },\n    address: {\n      marginTop: 13,\n      margin: 2,\n      width: \"80.5%\",\n    },\n    bio: {\n      margin: 2,\n      marginTop: 13,\n    },\n    button: {\n      marginTop: 13,\n      width: \"80.7%\",\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 500,\n        display:'block',\n        marginLeft : -0.1,\n        width: \"40%\",\n        \"& label.Mui-focused\": {\n          color: \"green\",\n        },\n        \"& .MuiInput-underline:after\": {\n          borderBottomColor: \"green\",\n        },\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"#cfccdf\",\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"#e9967a\",\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"green\",\n          },\n        },\n        \n      },\n  }));\n  \n  const PostPage = () => {\n    const classes = useStyles();\n    const matches = useMediaQuery(\"(min-width:750px)\");\n\n    const history = useHistory();\n  \n\n    const validationSchema = Yup.object().shape({\n      title:Yup.string()\n        .required('you must write a title')\n        .max(100,'Title is too long'),\n      content: Yup.string()\n         .required('You must write something'),\n      image : Yup.string(),\n      status:Yup.string()\n     })\n     \n     const initialValues = {\n       title:'',\n       content:'',\n       image:'',\n       status:''\n     }\n     \n     \n     const onSubmit = async(values) => {\n       postData(\"https://blog-backend-ysf.herokuapp.com/create/\", \n           values\n         )\n         .then((data) => {\n            history.push(\"/\");\n       \n         }).catch((err) => {\n             console.log(err)\n         })\n        }\n     \n     const formik = useFormik({\n       initialValues,\n       validationSchema,\n       onSubmit\n     })\n\n  \n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid item xs={12} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LocalMallIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Create New Post\n            </Typography>\n            <form className={matches ? classes.form : classes.form2} onSubmit={formik.handleSubmit}>\n              <CssTextField\n                className={classes.margin}\n                style={{ width: matches ? \"80.5%\" : \"100%\" }}\n                variant=\"outlined\"\n                id=\"title\"\n                name=\"title\"\n                label=\"Title\"\n                onChange={formik.handleChange}\n                value = {formik.values.title}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('title')}\n                error={formik.touched.title && formik.errors.title}\n                  helperText={formik.touched.title && formik.errors.title}\n              />\n              <CssTextField\n                className={classes.margin}\n                style={{ width: matches ? \"80.5%\" : \"100%\" }}\n                id=\"image\"\n                name=\"image\"\n                label=\"Image URL\"\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                value = {formik.values.image}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('image')}\n                error={formik.touched.image && formik.errors.image}\n                helperText={formik.touched.image&& formik.errors.image}\n              />\n              {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              \n                className={classes.margin}\n                style={{width: matches ? \"80.5%\" : \"100%\" }}\n                variant=\"outlined\"\n                multiline\n                rows={8}\n                id=\"content\"\n                name=\"content\"\n                label=\"Content\"\n                onChange={formik.handleChange}\n                value = {formik.values.content}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('content')}\n                error={formik.touched.content && formik.errors.content }\n                helperText={formik.touched.content && formik.errors.content }\n                \n              />\n              \n           \n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Status</InputLabel>\n                <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name='status'\n                inputProps={{\n                    name: 'status',\n                    id: 'outlined-age-native-simple',\n                }}\n                >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={'d'} label = 'draft'/>\n                <option value={'p'} label = 'published'/>\n                \n                </Select>\n              </FormControl>\n              <Button\n                color=\"primary\"\n                style={{\n                  width: matches ? \"80.7%\" : \"100%\",\n                  marginTop: matches ? null : 30,\n                }}\n                variant=\"contained\"\n                fullWidth\n                type=\"submit\"\n                className={classes.button}\n              >\n                Create\n              </Button>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  };\n  export default PostPage;\n\n ",["103","104"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\Register.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\router\\Router.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\CardDetail.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\Homepage.js",["105"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\index.js",[],["106","107"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\Navbar.js",["108","109","110"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\reportWebVitals.js",[],["111","112"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\BlogCard.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\CardList.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\ProfilePage.js",["113"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\App.js",[],["114","115"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\NavBar.js",["116","117","118","119"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\Login.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\context\\AuthContext.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\helper\\FetchData.js",["120","121"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\HomePage.js",["122","123","124"],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\helper\\PostData.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\MenuComponent.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\pages\\DetailPage.js",[],"C:\\Users\\Admin\\Desktop\\clarusway\\django\\blogapp\\src\\components\\Pagination.js",[],{"ruleId":"125","severity":1,"message":"126","line":143,"column":6,"nodeType":"127","endLine":143,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":162,"column":11,"nodeType":"131","messageId":"132","endLine":162,"endColumn":19},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"129","severity":1,"message":"137","line":19,"column":8,"nodeType":"131","messageId":"132","endLine":19,"endColumn":16},{"ruleId":"129","severity":1,"message":"138","line":23,"column":10,"nodeType":"131","messageId":"132","endLine":23,"endColumn":19},{"ruleId":"133","replacedBy":"139"},{"ruleId":"135","replacedBy":"140"},{"ruleId":"125","severity":1,"message":"126","line":24,"column":30,"nodeType":"127","endLine":24,"endColumn":32,"suggestions":"141"},{"ruleId":"133","replacedBy":"142"},{"ruleId":"135","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":26,"column":5,"nodeType":"146","messageId":"147","endLine":26,"endColumn":15},{"ruleId":"129","severity":1,"message":"148","line":83,"column":11,"nodeType":"131","messageId":"132","endLine":83,"endColumn":22},{"ruleId":"129","severity":1,"message":"149","line":84,"column":10,"nodeType":"131","messageId":"132","endLine":84,"endColumn":15},{"ruleId":"133","replacedBy":"150"},{"ruleId":"135","replacedBy":"151"},{"ruleId":"125","severity":1,"message":"126","line":154,"column":6,"nodeType":"127","endLine":154,"endColumn":8,"suggestions":"152"},{"ruleId":"133","replacedBy":"153"},{"ruleId":"135","replacedBy":"154"},{"ruleId":"129","severity":1,"message":"155","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":37},{"ruleId":"129","severity":1,"message":"156","line":17,"column":22,"nodeType":"131","messageId":"132","endLine":17,"endColumn":30},{"ruleId":"144","severity":1,"message":"145","line":28,"column":5,"nodeType":"146","messageId":"147","endLine":28,"endColumn":15},{"ruleId":"129","severity":1,"message":"148","line":87,"column":24,"nodeType":"131","messageId":"132","endLine":87,"endColumn":35},{"ruleId":"157","severity":2,"message":"158","line":68,"column":32,"nodeType":"131","messageId":"159","endLine":68,"endColumn":36},{"ruleId":"157","severity":2,"message":"160","line":68,"column":38,"nodeType":"131","messageId":"159","endLine":68,"endColumn":42},{"ruleId":"129","severity":1,"message":"161","line":16,"column":24,"nodeType":"131","messageId":"132","endLine":16,"endColumn":39},{"ruleId":"129","severity":1,"message":"162","line":17,"column":20,"nodeType":"131","messageId":"132","endLine":17,"endColumn":31},{"ruleId":"129","severity":1,"message":"163","line":17,"column":33,"nodeType":"131","messageId":"132","endLine":17,"endColumn":46},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["164"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"'CKEditor' is defined but never used.","'fetchData' is defined but never used.",["165"],["166"],["167"],["165"],["166"],"no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","'currentUser' is assigned a value but never used.","'login' is assigned a value but never used.",["165"],["166"],["168"],["165"],["166"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","no-undef","'path' is not defined.","undef","'data' is not defined.","'setPostsPerPage' is assigned a value but never used.","'setPostList' is assigned a value but never used.","'fetchDataList' is assigned a value but never used.",{"desc":"169","fix":"170"},"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"171"},{"desc":"169","fix":"172"},"Update the dependencies array to be: [fetchData]",{"range":"173","text":"174"},{"range":"175","text":"174"},{"range":"176","text":"174"},[3395,3397],"[fetchData]",[584,586],[3852,3854]]